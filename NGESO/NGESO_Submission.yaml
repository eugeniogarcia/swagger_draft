swagger: '2.0'
info:
  version: '1.0'
  title: NGESO Wider Access Submission
  description: >-
    ---

    # Overview


    The Submission API allows the Market Participants (MP) to submit Physical
    Notifications, Quiescent Physical Notifications, Bids & Offers, & Maximum
    Export/Import Limits, before the Balancing Mechanism Gate is closed. It is
    the principal mechanism by which participants in the existing Pool submit
    their offer data to NGESO.


    ---

    # Notification Time

    The System Time of the Host shall be in GMT and be kept referenced to a
    recognised global time base. It is this time, which shall determine gate
    closure for submissions. Each invocation successfully transferred to the
    Host will be deemed to be a submission. The notification time of this file
    and hence all data contained within it shall be deemed to be the point in
    time that the submission was made.


    ---

    # Submission Acknoledgment:

    The acknowledgement message will contain the notification time of the
    submission processed by BM. The notification time will use the standard Time
    format defined in the Convention paragraph.


    ---


    # Submission Acceptance:

    Acceptance are produced once a submission request has been validated in its
    entirety. The acceptance response will contain a list of all BMUs for which
    all submitted data has passed formatting, consistency and validation tests.
    The output will be in the form of a list, sorted alphanumerically by BMU
    name.


    ---

    # Submission Rejection:

    Submission rejection are also produced once a submission file has been
    validated in its entirety. Each record contained within a file is checked
    for formatting, validity and consistency. Should formatting prove incorrect
    the requestr will not proceed to validation and will be rejected at that
    stage. Thus a record that has invalid data and is also incorrectly formatted
    for the type of data will only have a message stating that it was rejected
    owing to a formatting error. The validity of the record will not be
    considered. Once a record has completed and passed formatting checks, it
    will be checked against each applicable validation and consistency rule. Any
    and all of these failures will be reported individually for each submitted
    record. Hence a single row that does not comply with multiple validation or
    consistency rules, will give rise to multiple error messages within a reject
    request.


    ---

    # Onboarding:

    Please follow the onborarding process to get the proper Authorization to
    consume this API.


    ---

    # Conventions:  

    **timeFrom**=  CCYY-MM-DD hh:mm  

    **timeTo**=  CCYY-MM-DD hh:mm  

    **levelFrom**=  MW  

    **levelTo**=  MW  

    **offerPrice**=  £ / MWh  

    **bidPrice**=  £ / MWh  



    **Time Format:**  

    **CCYY**= year (numeric)  

    **MM**= month (numeric)  

    **DD**= day (numeric)  

    a single space separator between date and time  

    **hh**= hours  

    **mm**= minutes  
  license:
    name: NGESO
    url: 'https://www.nationalgrideso.com/terms-and-conditions'
host: api.wa.nationalgrid.com
basePath: /ngeso/v1
tags:
  - name: submission
    description: EDT Balancing Participants Submissions
    externalDocs:
      description: Find out more
      url: 'https://www.nationalgrideso.com/'
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /submission:
    post:
      tags:
        - submission
      summary: 'Add a new submission [Market Participant -> NGESO]'
      consumes:
        - application/json
      parameters:
        - name: OSCGAppKeyHeader
          in: header
          required: true
          type: string
          description: API Key
        - name: OSCGOAuthBearer
          in: header
          required: true
          type: string
          description: OAuth2 Token
        - name: replyTo
          in: header
          required: true
          type: string
          description: URL where to receive responses back
        - in: body
          name: submission
          description: Submission Request Data
          required: true
          schema:
            $ref: '#/definitions/Submission'
      responses:
        '200':
          description: Successful Response
          schema:
            type: object
            items:
              $ref: '#/definitions/Response'
          examples:
            application/json:
              - message: Successful Request
                version: '1.0'
                sequence: '1977'
                uniqueTraceId: 'cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce'
                timestamp: '2018-10-11T12:00:00.123Z'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Bad Request
                version: '1.0'
                code: '400'
                detail: Wrong Data Format
                uniqueTraceId: 'cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce'
                timestamp: '2018-10-11T12:00:00.123Z'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Not Authorized
                version: '1.0'
                code: '401'
                detail: The Token has expired
                uniqueTraceId: 'cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce'
                timestamp: '2018-10-11T12:00:00.123Z'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Resource not found
                version: '1.0'
                code: '404'
                detail: Resource not found
                uniqueTraceId: 'cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce'
                timestamp: '2018-10-11T12:00:00.123Z'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Error message on the server side
                version: '1.0'
                code: '500'
                detail: Internal service error
                uniqueTraceId: 'cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce'
                timestamp: '2018-10-11T12:00:00.123Z'

definitions:
  Submission:
    title: Submission Request data
    type: object
    required:
      - BMUSubmissionElements
    properties:
      BMUSubmissionElements:
        type: array
        items:
          $ref: '#/definitions/BMUSubmissionElements'

  BMUSubmissionElements:
    title: BMU Submission Element
    type: object
    required:
      - bmUnitName
    properties:
      bmUnitName:
        type: string
        title: Unit Name
        example: BM_UNIT_1
      pn:
        type: array
        items:
          $ref: '#/definitions/PN'
      qpn:
        type: array
        items:
          $ref: '#/definitions/QPN'
      bod:
        type: array
        items:
          $ref: '#/definitions/BOD'
      mel:
        type: array
        items:
          $ref: '#/definitions/MEL'
      mil:
        type: array
        items:
          $ref: '#/definitions/MIL'
      rure:
        type: array
        items:
          $ref: '#/definitions/RURE'
      rdre:
        type: array
        items:
          $ref: '#/definitions/RDRE'
      ndz:
        type: array
        items:
          $ref: '#/definitions/NDZ'
      sel:
        type: array
        items:
          $ref: '#/definitions/SEL'
      mzt:
        type: array
        items:
          $ref: '#/definitions/MZT'
      mnzt:
        type: array
        items:
          $ref: '#/definitions/MNZT'
      ruri:
        type: array
        items:
          $ref: '#/definitions/RURI'
      rdri:
        type: array
        items:
          $ref: '#/definitions/RDRI'
      nto:
        type: array
        items:
          $ref: '#/definitions/NTO'
      ntb:
        type: array
        items:
          $ref: '#/definitions/NTB'
      sil:
        type: array
        items:
          $ref: '#/definitions/SIL'
      mdvp:
        type: array
        items:
          $ref: '#/definitions/MDVP'

  PN:
    title: Physical Notification
    type: object
    properties:
      timeFrom:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
        example: '2018-10-14 06:00'
      timeTo:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
        example: '2018-10-14 10:00'
      levelFrom:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '10'
      levelTo:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '20'
    required:
      - timeFrom
      - timeTo
      - levelFrom
      - levelTo

  QPN:
    title: Quiescent Physical Notification
    type: object
    properties:
      timeFrom:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
        example: '2018-10-14 06:00'
      timeTo:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
        example: '2018-10-14 10:00'
      levelFrom:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '15'
      levelTo:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '25'
    required:
      - timeFrom
      - timeTo
      - levelFrom
      - levelTo

  BOD:
    title: Bid-Offer Data
    type: object
    properties:
      timeFrom:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
        example: '2018-10-14 06:00'
      timeTo:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
        example: '2018-10-14 10:00'
      levelFrom:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '10'
      levelTo:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '20'
      pairNumber:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '123456'
      offerPrice:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{7}.\d{2}$'
        example: '12.31'
      bidPrice:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{7}.\d{2}$'
        example: '1.77'
    required:
      - timeFrom
      - timeTo
      - levelFrom
      - levelTo
      - pairNumber
      - offerPrice
      - bidPrice

  MEL:
    title: Maximum Export Limit
    type: object
    properties:
      timeFrom:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
        example: '2018-10-14 06:00'
      timeTo:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
        example: '2018-10-14 10:00'
      maximumExportLevelFrom:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '1977'
      maximumExportLevelTo:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '2010'
    required:
      - timeFrom
      - timeTo
      - maximumExportLevelFrom
      - maximumExportLevelTo

  MIL:
    title: Maximum Import Limit
    type: object
    properties:
      timeFrom:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
        example: '2018-10-14 06:00'
      timeTo:
        type: string
        pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}$'
        example: '2018-10-14 10:00'
      maximumImportLevelFrom:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '1977'
      maximumImportLevelTo:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '2010'

    required:
      - timeFrom
      - timeTo
      - maximumImportLevelFrom
      - maximumImportLevelTo

  RURE:
    title: 'Run Up Rate Export'
    type: object
    properties:
      rate1:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0015.0'
      elBow2:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/+|-/d{9}$'
        example: '+0140'
      rate2:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0000.2'
      elBow3:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/+|-/d{9}$'
        example: '+0145'
      rate3:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0013.8'
    required:
      - rate1

  RDRE:
    title: 'Run Down Rate Export'
    type: object
    properties:
      rate1:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0010.0'
      elBow2:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '+0300'
      rate2:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0010.0'
      elBow3:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/+|-/d{9}$'
        example: '+0200'
      rate3:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0099.0'
    required:
      - rate1

  NDZ:
    title: 'Notice to Deviate From Zero'
    type: object
    properties:
      timeValue:
       type: string
       minLength: 0
       maxLength: 10
       pattern: '^\d{10}$'
       example: '030'
    required:
      - timeValue

  SEL:
    title: 'Stable Export Limit'
    type: object
    properties:
      MWlevel:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/+|-/d{9}$'
        example: '+00000050'
    required:
     - MWlevel

  MZT:
    title: 'Minimum Zero Time'
    type: object
    properties:
      timeValue:
       type: string
       minLength: 0
       maxLength: 10
       pattern: '^\d{10}$'
       example: '060'
    required:
      - timeValue

  MNZT:
    title: 'Minimum Non Zero Time'
    type: object
    properties:
      timeValue:
       type: string
       minLength: 0
       maxLength: 10
       pattern: '^\d{10}$'
       example: '248'
    required:
      - timeValue

  RURI:
    title: 'Run Up Rate Import'
    type: object
    properties:
      rate1:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0015.0'
      elBow2:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '+0045'
      rate2:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0000.4'
      elBow3:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '+0069'
      rate3:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0003.2'
    required:
      - rate1

  RDRI:
    title: 'Run Down Rate Import'
    type: object
    properties:
      rate1:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0005.6'
      elBow2:
        type: string
        minLength: 0
        maxLength: 5
        pattern: '^\/+|-/d{4}$'
        example: '+0012'
      rate2:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '0.6'
      elBow3:
        type: string
        minLength: 0
        maxLength: 5
        pattern: '^\/+|-/d{4}$'
        example: '+0012'
      rate3:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/d{8}./d{1}$'
        example: '2.3'
    required:
      - rate1

  NTO:
    title: 'Notice to Deliver Offers'
    type: object
    properties:
      timeValue:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '002'
    required:
      - timeValue

  NTB:
    title: 'Notice to Deliver Bids'
    type: object
    properties:
      timeValue:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\d{10}$'
        example: '002'
    required:
      - timeValue

  SIL:
    title: 'Stable Export Limit'
    type: object
    properties:
      MWlevel:
        type: string
        minLength: 0
        maxLength: 10
        pattern: '^\/+|-/d{9}$'
        example: '+00000000'
    required:
     - MWlevel

  MDVP:
    title: 'Maximum Delivery Volume'
    type: object
    properties:
      MDV:
        type: string
        title: 'Max Delivery Volume (MW hours)'
        example: '8789809811'
      MDP:
        type: string
        title: 'Max. Delivery Period (minutes)'
        example: '878'
    required:
     - MDV
     - MDP

  Response:
    title: Successful Submission Response
    type: object
    properties:
      version:
        type: string
        example: '1.0'
      sequence:
        type: string
        minLength: 5
        maxLength: 5
        pattern: '^\d{5}$'
        example: '01234'
      uniqueTraceId:
        type: string
        example: 'cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce'
      timestamp:
        type: string
        format: date-time
        example: '2018-10-11T01:02:03.456Z'
    required:
      - version
      - sequence
      - uniqueTraceId
      - timestamp

  Error:
    title: Error payload
    type: object
    required:
      - version
      - uniqueTraceId
      - code
      - message
      - detail
      - timestamp
    properties:
      message:
        type: string
        example: 'Error message'
      version:
        type: string
        example: '1.0'
      code:
        type: string
        minLength: 3
        maxLength: 4
        pattern: '^\d{4}$'
        example: '000'
      detail:
        type: string
        example: 'Error detailed information'
      uniqueTraceId:
        type: string
        example: 'cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce'
      timestamp:
        type: string
        format: date-time
        example: '2018-10-11T01:02:03.456Z'
