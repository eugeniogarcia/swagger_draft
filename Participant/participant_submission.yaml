swagger: '2.0'
info:
  version: '1.0'
  title: Wider Access Participant Submission
  description: >-
    ---

    # Overview


    The Submission API allows the Market Participants (MP) to submit Physical
    Notifications, Quiescent Physical Notifications, Bids & Offers, & Maximum
    Export/Import Limits, before the Balancing Mechanism Gate is closed. It is
    the principal mechanism by which participants in the existing Pool submit
    their offer data to NGESO.


    ---

    # Notification Time

    The System Time of the Host shall be in GMT and be kept referenced to a
    recognised global time base. It is this time, which shall determine gate
    closure for submissions. Each invocation successfully transferred to the
    Host will be deemed to be a submission. The notification time of this file
    and hence all data contained within it shall be deemed to be the point in
    time that the submission was made.


    ---

    # Submission Acknoledgment:

    The acknowledgement message will contain the notification time of the
    submission processed by BM. The notification time will use the standard Time
    format defined in the Convention paragraph.


    ---


    # Submission Acceptance:

    Acceptance are produced once a submission request has been validated in its
    entirety. The acceptance response will contain a list of all BMUs for which
    all submitted data has passed formatting, consistency and validation tests.
    The output will be in the form of a list, sorted alphanumerically by BMU
    name.


    ---

    # Submission Rejection:

    Submission rejection are also produced once a submission file has been
    validated in its entirety. Each record contained within a file is checked
    for formatting, validity and consistency. Should formatting prove incorrect
    the requestr will not proceed to validation and will be rejected at that
    stage. Thus a record that has invalid data and is also incorrectly formatted
    for the type of data will only have a message stating that it was rejected
    owing to a formatting error. The validity of the record will not be
    considered. Once a record has completed and passed formatting checks, it
    will be checked against each applicable validation and consistency rule. Any
    and all of these failures will be reported individually for each submitted
    record. Hence a single row that does not comply with multiple validation or
    consistency rules, will give rise to multiple error messages within a reject
    request.


    ---
    
    # Submission Errors
    
    You may found the list of errors that may be included on a Rejection here. 
    
    
    ---

    # Onboarding:

    Please follow the onborarding process to get the proper Authorization to
    consume this API.


    ---

    # Conventions:

    **timeFrom**=  CCYY-MM-DD hh:mm

    **timeTo**=  CCYY-MM-DD hh:mm

    **levelFrom**=  MW

    **levelTo**=  MW

    **offerPrice**=  £ / MWh

    **bidPrice**=  £ / MWh



    **Time Format:**

    **CCYY**= year (numeric)

    **MM**= month (numeric)

    **DD**= day (numeric)

    a single space separator between date and time

    **hh**= hours

    **mm**= minutes 
  license:
    name: NGESO
    url: 'https://www.nationalgrideso.com/terms-and-conditions'
host: api.wa.nationalgrid.com
basePath: /ngeso/v1
tags:
  - name: submission
    description: Everything about Submissions
    externalDocs:
      description: Find out more
      url: 'https://www.nationalgrideso.com/'
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /submissionAck:
    post:
      tags:
        - submission
      summary: >-
        BM Acknowledgment Response for a submission [NGESO -> Market
        Participant]
      consumes:
        - application/json
      parameters:
        - name: OSCGOAuthBearer
          in: header
          required: true
          type: string
          description: OAuth2 Token
        - in: body
          name: SubmissionACK
          description: Submission ACK
          required: true
          schema:
            $ref: '#/definitions/SubmissionACK'
      responses:
        '200':
          description: Successful Response
          schema:
            type: object
            items:
              $ref: '#/definitions/Response'
          examples:
            application/json:
              - version: '1.0'
                timestamp: '2018-10-11T12:00:00.123Z'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Bad Request
                code: '400'
                detail: Wrong Data Format
                timestamp: '2018-10-11T12:00:00.123Z'
                version: '1.0'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Not Authorized
                code: '401'
                detail: The Token has expired
                timestamp: '2018-10-11T12:00:00.123Z'
                version: '1.0'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Resource not found
                code: '404'
                detail: Resource not found
                timestamp: '2018-10-11T12:00:00.123Z'
                version: '1.0'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Error message on the server side
                code: '500'
                detail: Detailed error message
                timestamp: '2018-10-11T12:00:00.123Z'
                version: '1.0'
  /submissionResp:
    post:
      tags:
        - submission
      summary: >-
        BM Operational Response of a submission (acceptance and rejection) 
        [NGESO -> Market Participant]
      consumes:
        - application/json
      parameters:
        - name: OSCGOAuthBearer
          in: header
          required: true
          type: string
          description: OAuth2 Token
        - in: body
          name: ElementSubmissionResponse
          description: Element Submission Response
          required: true
          schema:
            $ref: '#/definitions/ElementSubmissionResponse'
      responses:
        '200':
          description: Successful Response
          schema:
            type: object
            items:
              $ref: '#/definitions/AcceptanceResponse'
          examples:
            application/json:
              - version: '1.0'
                timestamp: '2018-10-11T12:00:00.123Z'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Bad Request
                code: '400'
                detail: Wrong Data Format
                timestamp: '2018-10-11T12:00:00.123Z'
                version: '1.0'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Not Authorized
                code: '401'
                detail: The Token has expired
                timestamp: '2018-10-11T12:00:00.123Z'
                version: '1.0'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Resource not found
                code: '404'
                detail: Resource not found
                timestamp: '2018-10-11T12:00:00.123Z'
                version: '1.0'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              - message: Error message on the server side
                code: '500'
                detail: Detailed error message
                timestamp: '2018-10-11T12:00:00.123Z'
                version: '1.0'
definitions:
  SubmissionACK:
    title: BM Acknoledgment
    type: object
    required:
      - sequence
      - notificationTime
    properties:
      sequence:
        type: string
        title: Sequence
        example: '12345'
      notificationTime:
        type: string
        example: '2018-10-11 01:03'
  ElementSubmissionResponse:
    title: BM Element Submission Response
    type: object
    properties:
      sequence:
        type: string
        example: '12345'
      timestamp:
        type: string
        example: '2018-10-11T01:02:03.456Z'
      acceptance:
        type: array
        items:
          $ref: '#/definitions/AcceptanceResponse'
      rejection:
        type: array
        items:
          $ref: '#/definitions/RejectionResponse'
    required:
      - sequence
      - timestamp
  AcceptanceResponse:
    title: BM Acceptance Response
    type: object
    required:
      - bmUnitName
    properties:
      bmUnitName:
        type: string
        title: Unit Name
        example: BM_UNIT_1
  RejectionResponse:
    title: BM Rejection Response
    type: object
    properties:
      code:
        type: string
        example: V_RURE_2
      message:
        type: string
        example: An invalid combination of NULL rates and breakpoints was encountered
      record:
        type: string
        example: 'RURE, TR_AGT, BMUNIT01, 2001-11-03 05:00, , , 12,'
    required:
      - code
      - message
      - record
  Response:
    title: Successful Submission Response
    type: object
    properties:
      version:
        type: string
        example: '1.0'
      timestamp:
        type: string
        example: '2018-10-11T01:02:03.456Z'
    required:
      - version
      - timestamp
  Error:
    title: Error payload
    type: object
    required:
      - version
      - code
      - message
      - detail
      - timestamp
    properties:
      version:
        type: string
        example: '1.0'
      code:
        type: string
        example: '000'
      message:
        type: string
        example: Error message
      detail:
        type: string
        example: Error detailed information
      timestamp:
        type: string
        example: '2018-10-11T01:02:03.456Z'
